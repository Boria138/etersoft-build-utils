#!/bin/bash
# 2009 Etersoft www.etersoft.ru
# Author: Vitaly Lipatov <lav@etersoft.ru>
# Public domain

# return local path to publish srpm
get_etersoft_srpm_path()
{
	local SOURCE
	local ALPHA=$2
	local SOURCEFTP=$(eval_spec $1 | get_var "Source")

	if [ -z "$SOURCEFTP" ] ; then
		build_rpms_name $1
		SOURCEFTP=$(cat $1 | get_var "#Source" | subst_namever)
	fi

	[ -n "$SOURCEFTP" ] || fatal "Can't get Source from spec"
	SOURCEFTP=$(dirname "$SOURCEFTP")

	# FIXME: pass foreign path, needs to handle proto:// separately from ftp.eter:/path
	if ! echo $SOURCEFTP | grep -q $COMPANYFTP && ! echo $SOURCEFTP | grep -q ":" && ! echo $SOURCEFTP | grep -q "^/"; then
		# if source if not known target, or not ssh dest, or local local path,
		# just return empty and we will use UPLOADDIR var
		# TODO: we can use table for URL translating
		return
	fi

	# remove tarball if exists at the end of line (our struct)
	echo $SOURCEFTP | grep -q "tarball\$" && SOURCEFTP=$(dirname "$SOURCEFTP")
	# translate ftp to local path
	SOURCE=$(echo "$SOURCEFTP" | sed -e "s|.*://.*$COMPANYFTP|$TARGETFTPBASE|g")

	# rewrite V.E.R./sources with $ALPHA/sources
	if [ -n "$ALPHA" ] ; then
		SOURCE=$(dirname $SOURCE)
		SOURCE=$(dirname $SOURCE)/$ALPHA/sources
	fi

	echo $SOURCE
}

set_last_link()
{
	# do not change last if testing publish
	echo $1 | grep -q /testing/sources && return
	# do not change last if unstable publish
	echo $1 | grep -q /unstable/sources && return
	rm -f $1/../last
	ln -s $VERSION $1/../last
}
