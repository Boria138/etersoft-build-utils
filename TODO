Нуно сделать, чтобы при релизе (отправке) - rpmbs -s ? из git устанавливался тэг
gear-create-tag - как отключить запрос gpg-ключа
При при публикации?

Изменить порядок поиска замен, чтобы он происходил без базовой версии, а замены от предыдущей версии
действовали на следующие (тогда нужно вводить понятие порядка версий)

При rpmbb в git не пишется лог сборки

Нужно сделать замену требований к пакетам только для Req (и уж точно не для )
подробнее рассказывать, почему не работает hasher
сейчас хэшер вызывается с src.rpm из SRPMS
перенести etersoft-build-functions в /usr/share/etersoft-build-utils/functions

файлы с заменой:
пакет ALT - пакет замены
pkgrepl.rpm - базовый, используется всегда
pkgrepl.pclinux - для конкретной системы
pkgrepl.pclinux.2007 - для конкретной версии системы
записываем, откуда (из ALT) на что в другой системе менять

Сделать -x для удалённой сборки на x86_64?
#Сделать чтобы cvs_update не выводил вопросы об отсутствующих файлах (man cvs?)
%homedir в определении tmp не работает?

Реализовать rpm -bE через rpm --showrc ?

> >>:) 3. Было бы здорово, чтобы скрипты сначала проверяли
> >>
> >>передаваемые им аргументы, а потом начинали печатать
> >> служебную информацию, как то какой apt.conf они будут
> >> использовать.
> >
> >Не понял проблемы.
>
> Попробуйте написать rpmgs --help :)

=== Текущая разработка ===

Есть ещё пакеты с версией в виде даты (именно версией, а не релизом). Их 
тоже желательно не забыть (в том числе в части, касающейся 
макроподстановок). Но это, кажется, ещё более сложная задача.

 
=== Версия 1.6 ===
 - Не трогать часть файла после %changelog при rpmcs
 - добавить сборки раскидавшихся зависимостей на Иксы в одну
# - добавлять md5sum наподобие как в PLD для Source
 - доделать проверку на качество лицензии в LICENSE и содержимое INSTALL
 - rpmbph для src.rpm (через hasher):
   --init-root, .in, rpm -i src.rpm, rpmbph (не собирающий в hasher), .out { команды в скобках }
   чтобы спек исправлял прямо в hasher при сборке??
# - если rpm -bE отсутствует, что происходит - проверить.
 - вынести в функцию: список бинарных пакетов на основе src.rpm и каталога с пакетами
 - подготовить текст новости, порекламировать
 - обновить/сделать страницу с описанием проекта?

=== Версия 1.7 ===
# - доделать rpmbugs -n (создание баги)
 - sles_version, rhel_version, alt_version
 - myhsh не возвращает код состояния сборки?
 - how to use --build-args= for hsh? - проброс параметров в myhsh как параметров для rpm
 - Сделать нормальную документацию?
 - получение спеков из других проектов, с отчётом об обновлении (diff между)
# - в rpmbph добавить возможность -a M24 M23 - списка для сборки
# - rpmbb -r -bi не работает :(
 - исправить формирование .pot
 - исправить способ создания pot -и echog (заметить на message)

=== Версия 2.0 ===
 - -v для повышенной говорливости (оно же DEBUG в конфиге) - сделано VERBOSE
 - TODO: добавить возможность указания запускаемой команды
   (разделяя строку параметров на до -- и после)
 + запихнуть файлы для apt в свои каталоги, чтобы не мешались
# - не работает -m в rpmbph и rpmbsh
 - -i -u требуют именно такого порядка использования
 - перейти на общую обработку всех команд (одним скриптом)?
# - что возможно сделать с другими системами?
#   - short-circuit работает только с -bc и -bi на других платформах :(
# - помнить, что -m работает в дополнение к -r (сейчас -m вообще отключена)


Каждый мантейнер (если боится забыть посмотреть лог сборки) может
уже сейчас сделать себе alias вида
alias hsh="hsh --build='--define \"_unpackaged_files_terminate_build 1\"'"
не говоря уже про ~/.rpmmacros

Unpackaged:
awk '
            on { if (/^ +\//) print $0; else on=0 }
            /^warning: Installed \(but unpackaged\)/ { on=1; print $0 }
        ' <"$LOG_FILE"


----
$ list="line1
 line2
 line3"
$ a=qqq
$ while read l; do a="$l"; done < <(echo "$list")
$ echo $a
line3
