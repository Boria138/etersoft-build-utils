#!/bin/sh

# load common functions, compatible with local and installed script
. `dirname $0`/../share/eterbuild/functions/common
load_mod git

test -r "$1" && fatal "Do not need any files in params"

if [ "$1" = "-h" ] ; then
	echo "gpush - publish current project repo remote git repo"
	echo "Use: gpush [-f|--force] [-a|--all] [GEAR] [project name] [target branch]"
	exit 1
fi

PUSHFORCE=
if [ "$1" = "-f" ] || [ "$1" = "--force" ] ; then
	PUSHFORCE="--force"
	shift
fi

PUSHALL=
if [ "$1" = "-a" ] || [ "$1" = "--all" ] ; then
	PUSHALL="--all"
	shift
fi

if is_girar_name $1 ; then
	GIRARHOST=$1
	shift
fi

# use as project name
if [ -n "$1" ] ; then
	PROJECTNAME=$1
	shift
else
	PROJECTNAME=$(basename `get_root_git_dir`)
fi

CURRENTBRANCH=$(get_current_branch)

if [ -z "$CURRENTBRANCH" ] ; then
	echo "Can't detect current branch"
	exit 1
fi

if [ -n "$1" ] ; then
	TARGETBRANCH=$CURRENTBRANCH:$1
	shift
else
	TARGETBRANCH=$CURRENTBRANCH
fi

if [ "$PUSHALL" = "--all" ] ; then
	TEXTBRANCH="all branches"
	TARGETBRANCH=
else
	TEXTBRANCH="branch $TARGETBRANCH"
fi

push_to_remote()
{
	local GHOST=$1
	echo
	echo "** Push $TEXTBRANCH from $PROJECTNAME.git to $GHOST:packages/$PROJECTNAME.git"
	# FIXME: push with one command
	git push $PUSHALL $PUSHFORCE $GHOST:packages/$PROJECTNAME.git $TARGETBRANCH
	git push --tags $GHOST:packages/$PROJECTNAME.git $TARGETBRANCH
}

for i in `( echo $GIRARHOST; get_remote_git_list  ) | uniq` ; do
	push_to_remote $i
done

#> $ git commit -a; A='0.23-alt1'; git tag -s $A; \
#>   git tag -s -f -m 'Sisyphus release $A' sisyphus $A
